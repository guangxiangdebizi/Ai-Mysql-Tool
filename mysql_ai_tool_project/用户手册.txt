AI辅助MySQL交互工具 - 用户手册

目录
1. 产品简介
2. 功能特点
3. 系统要求
4. 安装步骤
5. 使用说明
6. 常见问题
7. 技术支持

1. 产品简介
===========
AI辅助MySQL交互工具是一款创新型数据库查询助手，它基于智谱AI的GLM-4-AIR大语言模型，实现了自然语言与MySQL数据库的智能交互。本工具采用模块化设计，包含数据库连接管理、AI交互处理、多界面呈现等核心组件，让用户能够使用日常语言进行数据库操作，无需编写复杂的SQL语句。

系统采用前后端分离架构，后端使用Flask框架提供API服务，前端提供Web界面、命令行界面和GUI配置工具三种交互方式。通过精心设计的提示词模板系统，确保了自然语言理解的准确性和SQL生成的可靠性。同时，系统能够自动分析数据库结构，提供实时的查询反馈，让数据库操作变得简单直观。

2. 功能特点
===========
2.1 核心功能
• 智能语言处理
  - 基于GLM-4-AIR模型的自然语言理解
  - 多级提示词模板系统（包含澄清、SQL生成、结果解释等）
  - 流式输出支持，实现实时反馈
  - 智能错误处理和提示机制

• 数据库交互能力
  - 自动分析和适应数据库结构
  - 支持复杂的SQL查询生成
  - 查询结果的智能解释和格式化
  - 数据库连接状态监控和管理

• 用户体验优化
  - 查询历史记录管理
  - 配置信息的保存和加载
  - 实时执行状态反馈
  - 友好的错误提示和建议

2.2 界面支持
• Web界面（现代化设计）
  - 基于Flask的后端API服务
  - 使用Tailwind CSS构建的响应式界面
  - CodeMirror实现的SQL代码高亮
  - Tabulator提供的数据表格展示
  - 支持数据库配置的可视化管理
  - 实时查询结果预览

• 命令行界面（传统操作）
  - 交互式SQL命令执行
  - AI辅助的自然语言查询
  - 表结构查看和管理
  - 彩色输出和格式化展示
  - 支持命令历史记录

• 图形配置工具
  - 基于Tkinter的轻量级GUI
  - 数据库连接参数配置
  - 连接测试功能
  - 配置文件管理

2.3 技术集成
• 数据库功能
  - 安全的连接管理机制
  - 自动的结构分析
  - 查询性能优化
  - 错误处理和恢复

• AI能力
  - 多轮对话理解
  - 上下文感知
  - 智能结果解释
  - 查询建议生成

3. 系统要求
===========
• 操作系统：
  - Windows 10或更高版本
  - macOS 10.14或更高版本
  - 主流Linux发行版

• 软件环境：
  - Python 3.8或更高版本
  - MySQL服务器（本地或远程）
  - 现代浏览器（推荐Chrome或Firefox）

• 硬件要求：
  - 最低4GB内存
  - 稳定的网络连接（用于AI模型调用）

4. 安装步骤
===========
4.1 基础安装
1) 下载项目代码：
   git clone https://github.com/your_username/mysql_ai_tool_project.git
   cd mysql_ai_tool_project

2) 创建虚拟环境：
   python -m venv .venv
   Windows: .venv\Scripts\activate
   Linux/Mac: source .venv/bin/activate

3) 安装依赖：
   pip install -r requirements.txt

4.2 配置说明
1) 打开config.py文件
2) 设置您的API密钥和其他相关配置

5. 使用说明
===========
5.1 启动方式
本工具提供两种使用方式：

A. Web界面（推荐）：
1) 运行命令：python mysql_ai_tool_project/web/app.py
2) 在浏览器中访问：http://localhost:5000
3) 输入数据库连接信息
4) 开始使用自然语言进行查询

B. 命令行界面：
1) 运行命令：python mysql_ai_tool_project/main.py
2) 按提示输入数据库连接信息
3) 选择操作模式
4) 开始交互

5.2 基本操作流程
1) 连接数据库
   • 输入用户名、密码、主机地址等信息
   • 点击"测试连接"确保连接成功
   • 选择要操作的数据库

2) 提交查询
   • 在输入框中用自然语言描述您的需求
   • 系统会自动生成SQL并执行
   • 查看查询结果和AI解释

3) 查看历史记录
   • 所有查询都会保存在历史记录中
   • 点击历史记录可以重复执行查询

6. 常见问题
===========
Q: 连接数据库失败怎么办？
A: 请检查：
   • 数据库服务是否启动
   • 连接信息是否正确
   • 用户是否有相应权限

Q: 为什么查询结果没有显示？
A: 可能原因：
   • 数据库中没有匹配的数据
   • SQL语句生成有误
   • 权限不足

Q: 如何优化查询效果？
A: 建议：
   • 使用清晰、具体的描述
   • 提供完整的查询条件
   • 适当使用专业术语

7. 技术支持
===========
如果您在使用过程中遇到问题，可以通过以下方式获取支持：

• GitHub Issues：https://github.com/guangxiangdebizi/
• 电子邮件：guangxiangdebizi@gmail.com
• LinkedIn：https://www.linkedin.com/in/%E6%98%9F%E5%AE%87-%E9%99%88-b5b3b0313/

版权说明
========
本项目采用MIT协议开源，详细信息请参考LICENSE文件。

最后更新日期：2024年2月22日 